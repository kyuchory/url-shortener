{"ast":null,"code":"var _jsxFileName = \"C:\\\\Document\\\\url-shortener\\\\front\\\\src\\\\components\\\\UrlInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { shortenUrl } from \"../services/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { setShortenedUrl } from \"../redux/urlSlice\";\n\n//일단 완성후에,\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UrlInput = () => {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const dispatch = useDispatch();\n  const isValidUrl = url => {\n    try {\n      new URL(url); // URL 객체로 변환 시 오류가 발생하면 유효하지 않은 URL\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n  const handleSendUrl = async () => {\n    const normalizedUrl = normalizeUrl(url);\n    if (isValidUrl(normalizedUrl)) {\n      try {\n        const data = await shortenUrl(normalizedUrl);\n        dispatch(setShortenedUrl(`${data.shortUrl}`));\n      } catch (error) {\n        alert(error);\n      }\n    } else {\n      alert(\"url 형식이 아님.\");\n    }\n  };\n  const normalizeUrl = url => {\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      return `https://${url}`;\n    }\n    return url;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: url,\n      onChange: event => setUrl(event.target.value),\n      placeholder: \"Url \\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendUrl,\n      children: \"\\uBCC0\\uD658\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UrlInput, \"WhRA+Y6I/E+Vr5ceZl26kSwPzWU=\", false, function () {\n  return [useDispatch];\n});\n_c = UrlInput;\nexport default UrlInput;\nvar _c;\n$RefreshReg$(_c, \"UrlInput\");","map":{"version":3,"names":["React","useState","shortenUrl","useDispatch","setShortenedUrl","jsxDEV","_jsxDEV","UrlInput","_s","url","setUrl","dispatch","isValidUrl","URL","e","handleSendUrl","normalizedUrl","normalizeUrl","data","shortUrl","error","alert","startsWith","children","type","value","onChange","event","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Document/url-shortener/front/src/components/UrlInput.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { shortenUrl } from \"../services/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setShortenedUrl } from \"../redux/urlSlice\";\r\n\r\n//일단 완성후에,\r\nconst UrlInput: React.FC = () => {\r\n  const [url, setUrl] = useState<string>(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isValidUrl = (url: string) => {\r\n    try {\r\n      new URL(url); // URL 객체로 변환 시 오류가 발생하면 유효하지 않은 URL\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleSendUrl = async () => {\r\n    const normalizedUrl = normalizeUrl(url);\r\n    if (isValidUrl(normalizedUrl)) {\r\n      try {\r\n        const data = await shortenUrl(normalizedUrl);\r\n        dispatch(setShortenedUrl(`${data.shortUrl}`));\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    } else {\r\n      alert(\"url 형식이 아님.\");\r\n    }\r\n  };\r\n\r\n  const normalizeUrl = (url: string) => {\r\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\r\n      return `https://${url}`;\r\n    }\r\n    return url;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={url}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n          setUrl(event.target.value)\r\n        }\r\n        placeholder=\"Url 을 입력하세요.\"\r\n      />\r\n      <button onClick={handleSendUrl}>변환</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UrlInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,mBAAmB;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAE1C,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,UAAU,GAAIH,GAAW,IAAK;IAClC,IAAI;MACF,IAAII,GAAG,CAACJ,GAAG,CAAC,CAAC,CAAC;MACd,OAAO,IAAI;IACb,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,aAAa,GAAGC,YAAY,CAACR,GAAG,CAAC;IACvC,IAAIG,UAAU,CAACI,aAAa,CAAC,EAAE;MAC7B,IAAI;QACF,MAAME,IAAI,GAAG,MAAMhB,UAAU,CAACc,aAAa,CAAC;QAC5CL,QAAQ,CAACP,eAAe,CAAC,GAAGc,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;MAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,KAAK,CAACD,KAAK,CAAC;MACd;IACF,CAAC,MAAM;MACLC,KAAK,CAAC,aAAa,CAAC;IACtB;EACF,CAAC;EAED,MAAMJ,YAAY,GAAIR,GAAW,IAAK;IACpC,IAAI,CAACA,GAAG,CAACa,UAAU,CAAC,SAAS,CAAC,IAAI,CAACb,GAAG,CAACa,UAAU,CAAC,UAAU,CAAC,EAAE;MAC7D,OAAO,WAAWb,GAAG,EAAE;IACzB;IACA,OAAOA,GAAG;EACZ,CAAC;EAED,oBACEH,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,GAAI;MACXiB,QAAQ,EAAGC,KAA0C,IACnDjB,MAAM,CAACiB,KAAK,CAACC,MAAM,CAACH,KAAK,CAC1B;MACDI,WAAW,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACF3B,OAAA;MAAQ4B,OAAO,EAAEnB,aAAc;MAAAQ,QAAA,EAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACzB,EAAA,CAhDID,QAAkB;EAAA,QAGLJ,WAAW;AAAA;AAAAgC,EAAA,GAHxB5B,QAAkB;AAkDxB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}